using System;
using System.Globalization;
using System.IO;
using System.Reflection;
namespace ENS491
{
	// Token: 0x02000002 RID: 2
	internal class anti_vm:Module
	{
		// Token: 0x06000001 RID: 1 RVA: 0x00002050 File Offset: 0x00000250
		public virtual void Start()
		{
			AppDomain.CurrentDomain.AssemblyResolve += anti_vm.OnResolveAssembly;
			anti_vm.Run();
		}

		// Token: 0x06000002 RID: 2 RVA: 0x00002070 File Offset: 0x00000270
		private static void Run()
		{
			string arg = "";
			bool flag = VirtualMachineDetector.Assert(out arg);
			if (flag)
			{
				Console.WriteLine("DETECTED {0}!", arg);
                Environment.Exit(0);
			}
		}

		// Token: 0x06000003 RID: 3 RVA: 0x0000209C File Offset: 0x0000029C
		private static Assembly OnResolveAssembly(object sender, ResolveEventArgs args)
		{
			Assembly executingAssembly = Assembly.GetExecutingAssembly();
			AssemblyName assemblyName = new AssemblyName(args.Name);
			string text = assemblyName.Name + ".dll";
			bool flag = !assemblyName.CultureInfo.Equals(CultureInfo.InvariantCulture);
			if (flag)
			{
				text = string.Format("{0}\\{1}", assemblyName.CultureInfo, text);
			}
			Assembly result;
			using (Stream manifestResourceStream = executingAssembly.GetManifestResourceStream(text))
			{
				bool flag2 = manifestResourceStream == null;
				if (flag2)
				{
					result = null;
				}
				else
				{
					byte[] array = new byte[manifestResourceStream.Length];
					manifestResourceStream.Read(array, 0, array.Length);
					result = Assembly.Load(array);
				}
			}
			return result;
		}
	}
}