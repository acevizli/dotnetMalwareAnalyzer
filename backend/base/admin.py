from django.contrib import admin
from .models import ClassCode, Package, Reference
import os, subprocess
from django import forms

# Register your models here.

csprojTemplateFramework = '<Project Sdk="Microsoft.NET.Sdk"><PropertyGroup><OutputType>Exe</OutputType><TargetFramework>netframework4.8</TargetFramework></PropertyGroup></Project>'


class ClassCodeAdminForm(forms.ModelForm):
    class Meta:
        model = ClassCode
        fields = "__all__"

    def clean(self):
        data = self.cleaned_data
        path = ".\\Scripts\\DotnetProject"
        i = 1
        for fname in os.listdir(path):
            if fname.startswith("source"):
                os.remove(os.path.join(path, fname))
        f = open(os.path.join(path, "DotnetProject.csproj"), "w")
        f.write(csprojTemplateFramework)
        f.close()
        f2 = open(os.path.join(path, "source{}.cs".format(i)), "w", encoding="utf-8")
        f2.write(data["code"])
        f2.close()
        i += 1
        for package in data["packageDependincies"]:
            proc = subprocess.Popen(
                "dotnet add package {}".format(package.package),
                shell=True,
                stdout=subprocess.PIPE,
                stderr=subprocess.PIPE,
                cwd=path,
            )
            stdout, stderr = proc.communicate()
            if proc.returncode != 0:
                raise forms.ValidationError(
                    "package dependency could not added dotnet response:\n"
                    + stdout.decode("utf-8", "replace"),
                )

        for reference in data["referenceDependincies"]:
            proc = subprocess.Popen(
                "dotnet add reference ..\Libraries\{}".format(reference.package),
                shell=True,
                stdout=subprocess.PIPE,
                stderr=subprocess.PIPE,
                cwd=path,
            )
            stdout, stderr = proc.communicate()
            if proc.returncode != 0:
                raise forms.ValidationError(
                    "reference dependency could not added dotnet response:\n"
                    + stdout.decode("utf-8", "replace"),
                )
        command = "dotnet build --configuration Release"
        proc = subprocess.Popen(
            command,
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            cwd=path,
        )
        stdout, stderr = proc.communicate()
        if proc.returncode != 0:
            raise forms.ValidationError(
                "Build failed dotnet response:\n" + stdout.decode("utf-8", "replace"),
            )


@admin.register(ClassCode)
class ClassCodeAdmin(admin.ModelAdmin):
    form = ClassCodeAdminForm


admin.site.register(Package)
admin.site.register(Reference)
